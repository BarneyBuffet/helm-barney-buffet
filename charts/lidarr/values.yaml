replicaCount: 1

image:
  repository: linuxserver/lidarr
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

config:
  tz: "Etc/GMT"
  puid: 10000
  pgid: 10001

volume:
  size: 300Gi
  accessModes: "ReadWriteMany"
  storageClassName: raid

nfs:
  server: 192.168.0.5
  path: "/volume/raid"

service:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  loadBalancerIP: 192.168.0.2
  port: 80

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000
  # runAsUser: 1027
  # runAsGroup: 100

securityContext: {}
  # capabilities:
  #   add:
  #     - NET_ADMIN
  #     - SYS_TIME
    # drop:
    # - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1027
  # runAsGroup: 100

livenessProbe:
  tcpSocket:
    port: gui
  initialDelaySeconds: 60
  failureThreshold: 10
  timeoutSeconds: 5

readinessProbe:
  tcpSocket:
    port: gui
  initialDelaySeconds: 60
  failureThreshold: 10
  timeoutSeconds: 5

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
